using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Threading.Tasks;
using DSharpPlus;
using DSharpPlus.CommandAll.Attributes;
using DSharpPlus.CommandAll.Commands;
using Humanizer;
using OoLunar.DocBot.Database;
using OoLunar.DocBot.Entities;

namespace OoLunar.DocBot.Commands
{
    public sealed partial class TagCommand
    {
        [Command("edit"), Description("Modifies the content of a tag.")]
        public static Task SendAsync(CommandContext context, [Description("The name of the tag.")] string name, [RemainingText, Description("The new content to show.")] string content)
        {
            if (DatabaseTracker.GetTag(name) is not TagEntity tag)
            {
                return context.ReplyAsync($"Tag {name} not found.");
            }
            else if (!tag.History.Any(x => x.Author == context.User.Id) || context.Member!.Permissions.HasPermission(Permissions.ManageMessages))
            {
                return context.ReplyAsync($"Tag {name} can only be edited by its creator, any of it's previous editors, or by someone with the {Formatter.InlineCode(Permissions.ManageMessages.Humanize(LetterCasing.Title))} permission.");
            }
            else if (DatabaseTracker.UpdateTag(tag.Name, tag.Content, tag.Aliases, new List<TagHistory>(tag.History) { new TagHistory(content, tag.Aliases, context.User.Id, System.DateTimeOffset.UtcNow) }))
            {
                return context.ReplyAsync($"Tag {name} has been edited.");
            }

            return context.ReplyAsync($"Tag {name} could not be edited.");
        }
    }
}
